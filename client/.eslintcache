[{"/home/james/Contact-List/client/src/index.js":"1","/home/james/Contact-List/client/src/App.js":"2","/home/james/Contact-List/client/src/components/layout/Navbar.js":"3","/home/james/Contact-List/client/src/components/pages/Home.js":"4","/home/james/Contact-List/client/src/components/pages/About.js":"5","/home/james/Contact-List/client/src/context/contact/ContactState.js":"6","/home/james/Contact-List/client/src/context/contact/contactContext.js":"7","/home/james/Contact-List/client/src/context/contact/contactReducer.js":"8","/home/james/Contact-List/client/src/context/types.js":"9","/home/james/Contact-List/client/src/components/contacts/Contacts.js":"10","/home/james/Contact-List/client/src/components/contacts/ContactItem.js":"11","/home/james/Contact-List/client/src/components/contacts/ContactForm.js":"12"},{"size":199,"mtime":1608475611203,"results":"13","hashOfConfig":"14"},{"size":749,"mtime":1608485676985,"results":"15","hashOfConfig":"14"},{"size":774,"mtime":1608475611199,"results":"16","hashOfConfig":"14"},{"size":404,"mtime":1608492644536,"results":"17","hashOfConfig":"14"},{"size":429,"mtime":1608475611201,"results":"18","hashOfConfig":"14"},{"size":1751,"mtime":1608485676987,"results":"19","hashOfConfig":"14"},{"size":259,"mtime":1608485676988,"results":"20","hashOfConfig":"14"},{"size":0,"mtime":1608485676989,"results":"21","hashOfConfig":"14"},{"size":460,"mtime":1608485676990,"results":"22","hashOfConfig":"14"},{"size":749,"mtime":1608491336459,"results":"23","hashOfConfig":"14"},{"size":1183,"mtime":1608491336458,"results":"24","hashOfConfig":"14"},{"size":1537,"mtime":1608492696563,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1fazpl9",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/james/Contact-List/client/src/index.js",[],["53","54"],"/home/james/Contact-List/client/src/App.js",[],"/home/james/Contact-List/client/src/components/layout/Navbar.js",[],"/home/james/Contact-List/client/src/components/pages/Home.js",[],"/home/james/Contact-List/client/src/components/pages/About.js",[],"/home/james/Contact-List/client/src/context/contact/ContactState.js",["55","56","57","58","59","60","61","62"],"// Import React package with useReducer hook\nimport React, { useReducer } from 'react';\n// Import uuid package to create custom ids\nimport uuid from 'uuid';\n// Import contact context instance\nimport ContactContext from './contactContext';\n// Import contact context reduce function to update state values\nimport ContactReducer from './contactReducer';\n// Import variables from types.js\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  CLEAR_FILTER\n} from '../types';\n\nconst ContactState = (props) => {\n  const initialState = {\n    contacts: [\n      {\n        id:1,\n        name: 'James Thomas',\n        email: 'jamest@email.com',\n        phone: '111-111-1111',\n        type: 'personal'\n      },\n      {\n        id:2,\n        name: 'Kayla Turner',\n        email: 'kaylat@email.com',\n        phone: '222-222-2222',\n        type: 'personal'\n      },\n      {\n        id:3,\n        name: 'Hunter Gunner',\n        email: 'huntert@email.com',\n        phone: '333-333-3333',\n        type: 'professional'\n      }\n    ]\n  };\n\n  // Initialize useReducer hook to access contacts state values\n  const [state, dispatch] = useReducer(ContactReducer, initialState);\n\n                                            // Contact State Actions\n\n    // ADD a contact,\n    // DELETE a contact,\n    // SET the current contact,\n    // UPDATE the contact,\n    // FILTER contacts\n    // CLEAR the filter\n\n    // Return contact context provider element\n    return (\n      <ContactContext.Provider\n        // Set contact state & actions for access in app components\n        value={{\n          contacts: state.contacts\n        }}\n        >\n          {props.children}\n        </ContactContext.Provider>\n    )\n};\n\nexport default ContactState;","/home/james/Contact-List/client/src/context/contact/contactContext.js",[],"/home/james/Contact-List/client/src/context/contact/contactReducer.js",[],"/home/james/Contact-List/client/src/context/types.js",[],"/home/james/Contact-List/client/src/components/contacts/Contacts.js",[],"/home/james/Contact-List/client/src/components/contacts/ContactItem.js",["63"],"// Import React package\nimport React from 'react'\n// IMport\nimport PropTypes from 'prop-types';\n\nconst ContactItem = ({ contact }) => {\n  // Deconstruct contact information from props\n  const { id, name, email, phone, type } = contact;\n  return (\n    <div className='card bg-light'>\n      <h3 className='text-primary text-left'>\n        {/* Display contact name and a badge conditionally on \"type\" of contact  */}\n        {name}{' '}\n        <span style={{ float: 'right' }}\n          className={'badge ' +\n          (type === 'professional' ? 'badge-success':'badge-primary')\n          }\n        >\n          {type.charAt(0).toUpperCase() + type.slice(1)}\n        </span>\n      </h3>\n      <ul className='list'>\n        {email && ( <li>\n          <i className='fas fa-envelope-open'></i> {email}\n        </li>)}\n        {phone && ( <li>\n          <i className='fas fa-phone'></i> {phone}\n        </li>)}\n      </ul>\n      <p>\n        <button className='btn btn-dark btn-sm'> Edit </button>\n        <button className='btn btn-danger btn-sm'> Delete </button>\n      </p>\n    </div>\n  )\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default ContactItem;","/home/james/Contact-List/client/src/components/contacts/ContactForm.js",["64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":4,"column":8,"nodeType":"71","messageId":"72","endLine":4,"endColumn":12},{"ruleId":"69","severity":1,"message":"73","line":11,"column":3,"nodeType":"71","messageId":"72","endLine":11,"endColumn":14},{"ruleId":"69","severity":1,"message":"74","line":12,"column":3,"nodeType":"71","messageId":"72","endLine":12,"endColumn":17},{"ruleId":"69","severity":1,"message":"75","line":13,"column":3,"nodeType":"71","messageId":"72","endLine":13,"endColumn":14},{"ruleId":"69","severity":1,"message":"76","line":14,"column":3,"nodeType":"71","messageId":"72","endLine":14,"endColumn":16},{"ruleId":"69","severity":1,"message":"77","line":15,"column":3,"nodeType":"71","messageId":"72","endLine":15,"endColumn":17},{"ruleId":"69","severity":1,"message":"78","line":16,"column":3,"nodeType":"71","messageId":"72","endLine":16,"endColumn":15},{"ruleId":"69","severity":1,"message":"79","line":47,"column":17,"nodeType":"71","messageId":"72","endLine":47,"endColumn":25},{"ruleId":"69","severity":1,"message":"80","line":8,"column":11,"nodeType":"71","messageId":"72","endLine":8,"endColumn":13},{"ruleId":"69","severity":1,"message":"81","line":1,"column":10,"nodeType":"71","messageId":"72","endLine":1,"endColumn":16},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'uuid' is defined but never used.","Identifier","unusedVar","'ADD_CONTACT' is defined but never used.","'DELETE_CONTACT' is defined but never used.","'SET_CURRENT' is defined but never used.","'CLEAR_CURRENT' is defined but never used.","'UPDATE_CONTACT' is defined but never used.","'CLEAR_FILTER' is defined but never used.","'dispatch' is assigned a value but never used.","'id' is assigned a value but never used.","'STATES' is defined but never used.","no-global-assign","no-unsafe-negation"]